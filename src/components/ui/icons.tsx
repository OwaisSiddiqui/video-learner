"use client";

import * as React from "react";

import { cn } from "@/lib/utils";

function IconMenu({
  className,
  inverted,
  ...props
}: React.ComponentProps<"svg"> & { inverted?: boolean }) {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn("size-4", className)}
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M3 8C3 7.44772 3.44772 7 4 7H20C20.5523 7 21 7.44772 21 8C21 8.55228 20.5523 9 20 9H4C3.44772 9 3 8.55228 3 8ZM3 16C3 15.4477 3.44772 15 4 15H14C14.5523 15 15 15.4477 15 16C15 16.5523 14.5523 17 14 17H4C3.44772 17 3 16.5523 3 16Z"
        fill="currentColor"
      ></path>
    </svg>
  );
}

function IconLogoIcon({
  className,
  inverted,
  ...props
}: React.ComponentProps<"svg"> & { inverted?: boolean }) {
  return (
    <svg
      width="20"
      height="23"
      viewBox="0 0 20 23"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn("size-4", className)}
      {...props}
    >
      <path
        d="M18.6572 12.2932L5.98265 4.80009C4.95285 4.19157 3.37573 4.78209 3.37573 6.28719V21.2698C3.37573 22.62 4.84123 23.4338 5.98265 22.7569L18.6572 15.2674C19.7878 14.6012 19.7914 12.9593 18.6572 12.2932Z"
        fill="#9F84D8"
      />
      <path
        d="M16.2815 8.72959L3.60692 1.23649C2.57712 0.627972 1 1.21849 1 2.72359V17.7062C1 19.0564 2.46549 19.8702 3.60692 19.1933L16.2815 11.7038C17.4121 11.0376 17.4157 9.39572 16.2815 8.72959Z"
        fill="black"
      />
      <path
        d="M16.2815 8.72959L3.60692 1.23649C2.57712 0.627972 1 1.21849 1 2.72359V17.7062C1 19.0564 2.46549 19.8702 3.60692 19.1933L16.2815 11.7038C17.4121 11.0376 17.4157 9.39572 16.2815 8.72959Z"
        stroke="white"
        strokeWidth="1.18787"
      />
      <path
        d="M16.2815 8.72959L3.60692 1.23649C2.57712 0.627972 1 1.21849 1 2.72359V17.7062C1 19.0564 2.46549 19.8702 3.60692 19.1933L16.2815 11.7038C17.4121 11.0376 17.4157 9.39572 16.2815 8.72959Z"
        stroke="white"
        strokeWidth="1.18787"
      />
    </svg>
  );
}

function IconLogo({
  className,
  inverted,
  ...props
}: React.ComponentProps<"svg"> & { inverted?: boolean }) {
  return (
    <svg
      width="160"
      height="24"
      viewBox="0 0 160 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn(className)}
      {...props}
    >
      <path
        d="M16.3938 10.7812L5.41622 4.29132C4.52429 3.76427 3.15833 4.27572 3.15833 5.57931V18.556C3.15833 19.7254 4.42761 20.4303 5.41622 19.844L16.3938 13.3572C17.3731 12.7802 17.3762 11.3581 16.3938 10.7812Z"
        fill="#9F84D8"
      />
      <path
        d="M14.3361 7.69471L3.35854 1.20483C2.46661 0.677781 1.10065 1.18924 1.10065 2.49283V15.4695C1.10065 16.639 2.36993 17.3438 3.35854 16.7575L14.3361 10.2707C15.3154 9.69376 15.3185 8.27166 14.3361 7.69471Z"
        fill="black"
      />
      <path
        d="M14.3361 7.69471L3.35854 1.20483C2.46661 0.677781 1.10065 1.18924 1.10065 2.49283V15.4695C1.10065 16.639 2.36993 17.3438 3.35854 16.7575L14.3361 10.2707C15.3154 9.69376 15.3185 8.27166 14.3361 7.69471Z"
        stroke="white"
        strokeWidth="1.02883"
      />
      <path
        d="M14.3361 7.69471L3.35854 1.20483C2.46661 0.677781 1.10065 1.18924 1.10065 2.49283V15.4695C1.10065 16.639 2.36993 17.3438 3.35854 16.7575L14.3361 10.2707C15.3154 9.69376 15.3185 8.27166 14.3361 7.69471Z"
        stroke="white"
        strokeWidth="1.02883"
      />
      <path
        d="M39.161 3.52338L34.3368 17.5273H30.7626L25.997 3.52338H29.3954L32.3153 13.2695C32.4716 13.7968 32.566 14.2623 32.5985 14.666H32.6571C32.7027 14.2298 32.8036 13.7512 32.9599 13.2304L35.8603 3.52338H39.161ZM42.1005 5.94525C41.5797 5.94525 41.1532 5.79226 40.8212 5.48627C40.4892 5.17377 40.3232 4.79291 40.3232 4.34369C40.3232 3.88145 40.4892 3.50385 40.8212 3.21088C41.1532 2.91791 41.5797 2.77142 42.1005 2.77142C42.6278 2.77142 43.0543 2.91791 43.3798 3.21088C43.7118 3.50385 43.8778 3.88145 43.8778 4.34369C43.8778 4.81244 43.7118 5.19655 43.3798 5.49603C43.0543 5.79551 42.6278 5.94525 42.1005 5.94525ZM43.6239 17.5273H40.538V7.52728H43.6239V17.5273ZM56.0067 17.5273H52.9208V16.1503H52.8817C52.1786 17.2311 51.1467 17.7714 49.786 17.7714C48.536 17.7714 47.5302 17.332 46.7685 16.4531C46.0067 15.5676 45.6259 14.3339 45.6259 12.7519C45.6259 11.0982 46.0458 9.77338 46.8857 8.77728C47.7255 7.78119 48.8258 7.28314 50.1864 7.28314C51.4755 7.28314 52.3739 7.74538 52.8817 8.66986H52.9208V2.7226H56.0067V17.5273ZM52.9794 12.664V11.912C52.9794 11.261 52.7906 10.7206 52.413 10.291C52.0354 9.86127 51.5439 9.64642 50.9384 9.64642C50.2548 9.64642 49.7209 9.91661 49.3368 10.457C48.9527 10.9908 48.7607 11.7265 48.7607 12.664C48.7607 13.5429 48.9462 14.22 49.3173 14.6953C49.6884 15.1705 50.2027 15.4081 50.8603 15.4081C51.4853 15.4081 51.9931 15.1575 52.3837 14.6562C52.7808 14.1549 52.9794 13.4908 52.9794 12.664ZM67.5888 13.4062H61.0653C61.1695 14.858 62.0842 15.5839 63.8095 15.5839C64.9097 15.5839 65.8765 15.3235 66.7099 14.8027V17.0292C65.7854 17.524 64.5842 17.7714 63.1064 17.7714C61.4918 17.7714 60.2385 17.3255 59.3466 16.4335C58.4547 15.5351 58.0087 14.2851 58.0087 12.6835C58.0087 11.0234 58.4905 9.70827 59.454 8.73822C60.4176 7.76817 61.6024 7.28314 63.0087 7.28314C64.467 7.28314 65.5933 7.71608 66.3876 8.58197C67.1884 9.44786 67.5888 10.623 67.5888 12.1074V13.4062ZM64.7274 11.5117C64.7274 10.0794 64.148 9.36322 62.9892 9.36322C62.4944 9.36322 62.0647 9.5683 61.7001 9.97845C61.342 10.3886 61.1239 10.8997 61.0458 11.5117H64.7274ZM74.1903 17.7714C72.5237 17.7714 71.2118 17.3059 70.2548 16.3749C69.3043 15.4374 68.829 14.1679 68.829 12.5663C68.829 10.9127 69.3238 9.62038 70.3134 8.68939C71.303 7.75189 72.6409 7.28314 74.3271 7.28314C75.9872 7.28314 77.2893 7.75189 78.2333 8.68939C79.1773 9.62038 79.6493 10.8541 79.6493 12.3906C79.6493 14.0507 79.161 15.3626 78.1845 16.3261C77.2144 17.2897 75.883 17.7714 74.1903 17.7714ZM74.2685 9.64642C73.5393 9.64642 72.9729 9.89707 72.5692 10.3984C72.1656 10.8997 71.9638 11.6093 71.9638 12.5273C71.9638 14.4479 72.7385 15.4081 74.288 15.4081C75.7659 15.4081 76.5048 14.4218 76.5048 12.4492C76.5048 10.5807 75.7593 9.64642 74.2685 9.64642ZM95.8212 17.5273H87.4814V3.52338H90.6357V14.9687H95.8212V17.5273ZM106.397 13.4062H99.8739C99.9781 14.858 100.893 15.5839 102.618 15.5839C103.718 15.5839 104.685 15.3235 105.518 14.8027V17.0292C104.594 17.524 103.393 17.7714 101.915 17.7714C100.3 17.7714 99.0471 17.3255 98.1552 16.4335C97.2633 15.5351 96.8173 14.2851 96.8173 12.6835C96.8173 11.0234 97.2991 9.70827 98.2626 8.73822C99.2261 7.76817 100.411 7.28314 101.817 7.28314C103.276 7.28314 104.402 7.71608 105.196 8.58197C105.997 9.44786 106.397 10.623 106.397 12.1074V13.4062ZM103.536 11.5117C103.536 10.0794 102.957 9.36322 101.798 9.36322C101.303 9.36322 100.873 9.5683 100.509 9.97845C100.151 10.3886 99.9325 10.8997 99.8544 11.5117H103.536ZM116.554 17.5273H113.634V16.0917H113.595C112.924 17.2115 111.931 17.7714 110.616 17.7714C109.646 17.7714 108.881 17.498 108.321 16.9511C107.768 16.3977 107.491 15.662 107.491 14.7441C107.491 12.804 108.64 11.6842 110.938 11.3847L113.653 11.0234C113.653 9.92963 113.061 9.38275 111.876 9.38275C110.684 9.38275 109.552 9.73757 108.477 10.4472V8.12299C108.907 7.90163 109.493 7.70632 110.235 7.53705C110.984 7.36778 111.664 7.28314 112.276 7.28314C115.128 7.28314 116.554 8.70567 116.554 11.5507V17.5273ZM113.653 13.4648V12.791L111.837 13.0253C110.834 13.1555 110.333 13.608 110.333 14.3828C110.333 14.7343 110.453 15.024 110.694 15.2519C110.942 15.4732 111.274 15.5839 111.69 15.5839C112.27 15.5839 112.742 15.3854 113.106 14.9882C113.471 14.5846 113.653 14.0768 113.653 13.4648ZM125.518 10.3105C125.147 10.1087 124.714 10.0078 124.22 10.0078C123.549 10.0078 123.025 10.2551 122.647 10.7499C122.27 11.2382 122.081 11.9055 122.081 12.7519V17.5273H118.995V7.52728H122.081V9.38275H122.12C122.608 8.02858 123.487 7.3515 124.757 7.3515C125.082 7.3515 125.336 7.39056 125.518 7.46869V10.3105ZM136.681 17.5273H133.604V11.9706C133.604 10.4212 133.051 9.64642 131.944 9.64642C131.41 9.64642 130.971 9.8515 130.626 10.2617C130.281 10.6718 130.108 11.1926 130.108 11.8242V17.5273H127.022V7.52728H130.108V9.10931H130.147C130.883 7.89187 131.954 7.28314 133.36 7.28314C135.574 7.28314 136.681 8.65684 136.681 11.4042V17.5273ZM148.116 13.4062H141.593C141.697 14.858 142.612 15.5839 144.337 15.5839C145.437 15.5839 146.404 15.3235 147.237 14.8027V17.0292C146.313 17.524 145.112 17.7714 143.634 17.7714C142.019 17.7714 140.766 17.3255 139.874 16.4335C138.982 15.5351 138.536 14.2851 138.536 12.6835C138.536 11.0234 139.018 9.70827 139.981 8.73822C140.945 7.76817 142.13 7.28314 143.536 7.28314C144.994 7.28314 146.121 7.71608 146.915 8.58197C147.716 9.44786 148.116 10.623 148.116 12.1074V13.4062ZM145.255 11.5117C145.255 10.0794 144.675 9.36322 143.517 9.36322C143.022 9.36322 142.592 9.5683 142.227 9.97845C141.869 10.3886 141.651 10.8997 141.573 11.5117H145.255ZM156.475 10.3105C156.104 10.1087 155.671 10.0078 155.177 10.0078C154.506 10.0078 153.982 10.2551 153.604 10.7499C153.227 11.2382 153.038 11.9055 153.038 12.7519V17.5273H149.952V7.52728H153.038V9.38275H153.077C153.565 8.02858 154.444 7.3515 155.714 7.3515C156.039 7.3515 156.293 7.39056 156.475 7.46869V10.3105Z"
        fill="black"
      />
    </svg>
  );
}

function IconSend({
  className,
  inverted,
  ...props
}: React.ComponentProps<"svg"> & { inverted?: boolean }) {
  return (
    <svg
      className={cn("size-4", className)}
      {...props}
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <rect
        width="24"
        height="24"
        rx="8"
        fill={inverted ? "black" : "#E5E5E5"}
      />
      <path
        d="M7 11L12 6L17 11M12 18V7"
        stroke="white"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}

function IconEdit({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn("size-4", className)}
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M16.7929 2.79289C18.0118 1.57394 19.9882 1.57394 21.2071 2.79289C22.4261 4.01184 22.4261 5.98815 21.2071 7.20711L12.7071 15.7071C12.5196 15.8946 12.2652 16 12 16H9C8.44772 16 8 15.5523 8 15V12C8 11.7348 8.10536 11.4804 8.29289 11.2929L16.7929 2.79289ZM19.7929 4.20711C19.355 3.7692 18.645 3.7692 18.2071 4.2071L10 12.4142V14H11.5858L19.7929 5.79289C20.2308 5.35499 20.2308 4.64501 19.7929 4.20711ZM6 5C5.44772 5 5 5.44771 5 6V18C5 18.5523 5.44772 19 6 19H18C18.5523 19 19 18.5523 19 18V14C19 13.4477 19.4477 13 20 13C20.5523 13 21 13.4477 21 14V18C21 19.6569 19.6569 21 18 21H6C4.34315 21 3 19.6569 3 18V6C3 4.34314 4.34315 3 6 3H10C10.5523 3 11 3.44771 11 4C11 4.55228 10.5523 5 10 5H6Z"
        fill="currentColor"
      ></path>
    </svg>
  );
}

function IconArrowDown({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("size-4", className)}
      {...props}
    >
      <path d="m205.66 149.66-72 72a8 8 0 0 1-11.32 0l-72-72a8 8 0 0 1 11.32-11.32L120 196.69V40a8 8 0 0 1 16 0v156.69l58.34-58.35a8 8 0 0 1 11.32 11.32Z" />
    </svg>
  );
}

function IconSpinner({ className, ...props }: React.ComponentProps<"svg">) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn("size-4 animate-spin", className)}
      {...props}
    >
      <path d="M232 128a104 104 0 0 1-208 0c0-41 23.81-78.36 60.66-95.27a8 8 0 0 1 6.68 14.54C60.15 61.59 40 93.27 40 128a88 88 0 0 0 176 0c0-34.73-20.15-66.41-51.34-80.73a8 8 0 0 1 6.68-14.54C208.19 49.64 232 87 232 128Z" />
    </svg>
  );
}

export {
  IconLogo,
  IconLogoIcon,
  IconMenu,
  IconSend,
  IconEdit,
  IconArrowDown,
  IconSpinner,
};
